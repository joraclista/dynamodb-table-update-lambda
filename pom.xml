<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.joraclista</groupId>
    <artifactId>dynamodb-update-lambda</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <junit.jupiter.version>5.1.0</junit.jupiter.version>
        <!--<junit.vintage.version>${junit.version}.0</junit.vintage.version>-->
        <junit.jupiter.version>5.0.0</junit.jupiter.version>
        <junit.platform.version>1.0.0</junit.platform.version>

        <lambda.functionCode>${project.build.directory}/${project.build.finalName}.jar</lambda.functionCode>
        <lambda.version>${project.version}</lambda.version>
        <lambda.publish>true</lambda.publish>
        <lambda.forceUpdate>true</lambda.forceUpdate>
        <lambda.functionNameSuffix>dev</lambda.functionNameSuffix>
        <app.environment>MY</app.environment>
        <lambda.region>us-east-1</lambda.region>
        <lambda.s3.bucket>deployment-artifacts-dev</lambda.s3.bucket>
        <lambda.role.arn>arn:aws:iam::324609709848:role/lambda-exec</lambda.role.arn>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <lambda.region>us-east-1</lambda.region>
                <lambda.s3.bucket>deployment-artifacts-dev</lambda.s3.bucket>
                <lambda.role.arn>arn:aws:iam::324609709848:role/lambda-exec</lambda.role.arn>
            </properties>
        </profile>
        <profile>
            <id>qa</id>
            <properties>
                <lambda.region>us-west-1</lambda.region>
                <lambda.s3.bucket>deployment-artifacts-qa</lambda.s3.bucket>
                <lambda.role.arn>arn:aws:iam::***:role/lambda_dynamo_streams</lambda.role.arn>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <lambda.region>eu-west-1</lambda.region>
                <lambda.s3.bucket>deployment-artifacts-production</lambda.s3.bucket>
                <lambda.role.arn>arn:aws:iam::***:role/lambda_dynamo_streams</lambda.role.arn>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.seanroy</groupId>
                <artifactId>lambda-maven-plugin</artifactId>
                <version>2.1.4</version>
                <configuration>
                    <!--<accessKey>***</accessKey>-->
                    <!--<secretKey>*****</secretKey>-->
                    <functionCode>${lambda.functionCode}</functionCode>
                    <version>${lambda.version}</version>
                    <lambdaRoleArn>${lambda.role.arn}</lambdaRoleArn>
                    <region>${lambda.region}</region>
                    <s3Bucket>${lambda.s3.bucket}</s3Bucket>
                    <publish>${lambda.publish}</publish>
                    <forceUpdate>${lambda.forceUpdate}</forceUpdate>
                    <!--<functionNameSuffix>${lambda.functionNameSuffix}</functionNameSuffix>-->
                    <lambdaFunctionsJSON>
                        [
                        {
                        "functionName": "dynamodb-tables-update-lambda",
                        "description": "dynamoDB Tables Records Update lambda function",
                        "handler": "com.github.joraclista.DynamoDbUpdatesHandler:handleRequest",
                        "timeout": 30,
                        "memorySize": 512,
                        "triggers": [
                        {
                        "integration": "DynamoDB",
                        "dynamoDBTable": "Merchants",
                        "batchSize": 1,
                        "startingPosition": "TRIM_HORIZON"
                        },
                        {
                        "integration": "DynamoDB",
                        "dynamoDBTable": "Products",
                        "batchSize": 1,
                        "startingPosition": "TRIM_HORIZON"
                        },
                        {
                        "integration": "DynamoDB",
                        "dynamoDBTable": "Orders",
                        "batchSize": 1,
                        "startingPosition": "TRIM_HORIZON"
                        }
                        ]
                        }
                        ]
                    </lambdaFunctionsJSON>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <dependencies>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>1.11.282</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-core -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.1.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-events -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-events</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.20</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.8.0-beta1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.3.0-alpha4</version>
        </dependency>



        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- To run tests on IDE such as Eclipse, Intellij -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
</project>